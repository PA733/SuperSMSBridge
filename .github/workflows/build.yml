name: Build and Upload

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, arm64, 386]
        mode: [debug, release]
        exclude:
          - os: macos-latest
            arch: 386

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.3

      - name: Build
        run: |
          mkdir -p dist/${{ matrix.os }}/${{ matrix.arch }}/${{ matrix.mode }}
          FLAGS=""
          if [ "${{ matrix.mode }}" = "release" ]; then
            FLAGS="-ldflags=-s -w"
          fi

          case "${{ matrix.os }}" in
            ubuntu-latest) GOOS=linux ;;
            windows-latest) GOOS=windows ;;
            macos-latest) GOOS=darwin ;;
          esac

          GOARCH=${{ matrix.arch }}
          GOOS=$GOOS GOARCH=$GOARCH go build $FLAGS -o dist/${{ matrix.os }}/${{ matrix.arch }}/${{ matrix.mode }}/super-sms-bridge ./cmd/super-sms-bridge
        shell: bash

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: super-sms-bridge-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.mode }}
          path: dist/${{ matrix.os }}/${{ matrix.arch }}/${{ matrix.mode }}/super-sms-bridge
